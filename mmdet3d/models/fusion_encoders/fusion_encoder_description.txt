Use load_from_local loader
pts_02_filename data/kitti/training/velodyne_02/005010.bin
points_02 torch.Size([51731, 4])
points torch.Size([49157, 4])
voxelize torch.Size([17872, 32, 4])
voxel_encoder output torch.Size([17872, 64])
voxel_encoder_02 output torch.Size([11745, 64])
middle_encoder tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0045, 0.0045, 0.0045,  ..., 0.0000, 0.0000, 0.0000],
         [0.1077, 0.1141, 0.1108,  ..., 0.0000, 0.0000, 0.0000]]],
       device='cuda:0')
middle_encoder_02 tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.8559, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.1093, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]],
       device='cuda:0')
x_3d tensor([[0.1077, 0.1141, 0.1108, 0.0000, 0.1079, 0.1153, 0.1110, 0.1192, 0.1160,
         0.1154, 0.0000, 0.0000, 0.0000, 0.0000, 0.1089, 0.0000, 0.1075, 0.1123,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
x_02_3d tensor([[0.1093, 0.0000, 0.0000, 0.1135, 0.0000, 0.0000, 0.0000, 0.1116, 0.0000,
         0.1240, 0.1089, 0.0000, 0.1127, 0.0000, 0.1200, 0.1129, 0.0000, 0.1140,
         0.1183, 0.1130, 0.1162, 0.0000, 0.1136, 0.1230, 0.0000, 0.1153, 0.1200,
         0.1200, 0.1208, 0.1238, 0.1208, 0.1165, 0.1257, 0.1236, 0.1165, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
x_fusion tensor([[[0.1077, 0.1093],
         [0.1141, 0.0000],
         [0.1108, 0.0000],
         [0.0000, 0.1135],
         [0.1079, 0.0000],
         [0.1153, 0.0000],
         [0.1110, 0.0000],
         [0.1192, 0.1116],
         [0.1160, 0.0000],
         [0.1154, 0.1240],
         [0.0000, 0.1089],
         [0.0000, 0.0000],
         [0.0000, 0.1127],
         [0.0000, 0.0000],
         [0.1089, 0.1200],
         [0.0000, 0.1129],
         [0.1075, 0.0000],
         [0.1123, 0.1140],
         [0.0000, 0.1183],
         [0.0000, 0.1130],
         [0.0000, 0.1162],
         [0.0000, 0.0000],
         [0.0000, 0.1136],
         [0.0000, 0.1230],
         [0.0000, 0.0000],
         [0.0000, 0.1153],
         [0.0000, 0.1200],
         [0.0000, 0.1200],
         [0.0000, 0.1208],
         [0.0000, 0.1238],
         [0.0000, 0.1208],
         [0.0000, 0.1165],
         [0.0000, 0.1257],
         [0.0000, 0.1236],
         [0.0000, 0.1165],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]]], device='cuda:0')
x_fused tensor([[[0.1093],
         [0.1141],
         [0.1108],
         [0.1135],
         [0.1079],
         [0.1153],
         [0.1110],
         [0.1192],
         [0.1160],
         [0.1240],
         [0.1089],
         [0.0000],
         [0.1127],
         [0.0000],
         [0.1200],
         [0.1129],
         [0.1075],
         [0.1140],
         [0.1183],
         [0.1130],
         [0.1162],
         [0.0000],
         [0.1136],
         [0.1230],
         [0.0000],
         [0.1153],
         [0.1200],
         [0.1200],
         [0.1208],
         [0.1238],
         [0.1208],
         [0.1165],
         [0.1257],
         [0.1236],
         [0.1165],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
x_squeeze tensor([[0.1093, 0.1141, 0.1108, 0.1135, 0.1079, 0.1153, 0.1110, 0.1192, 0.1160,
         0.1240, 0.1089, 0.0000, 0.1127, 0.0000, 0.1200, 0.1129, 0.1075, 0.1140,
         0.1183, 0.1130, 0.1162, 0.0000, 0.1136, 0.1230, 0.0000, 0.1153, 0.1200,
         0.1200, 0.1208, 0.1238, 0.1208, 0.1165, 0.1257, 0.1236, 0.1165, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')